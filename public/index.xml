<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Snižování rizika technologických projektů on Free Culture</title>
    <link>/</link>
    <description>Recent content in Snižování rizika technologických projektů on Free Culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dodatek A: Na co se ptát</title>
      <link>/dodatek-a.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/dodatek-a.html</guid>
      <description>Při posuzování rozpočtu na nový zakázkový software není praktické procházet celý předchozí text a hledat v něm vhodné otázky. Zde vám nabízíme několik základních, otevřených otázek, kterými si můžete ověřit, jestli váš projekt směřuje k úspěchu.
 Jaké jsou cíle projektu? Jaké výsledky jsou prioritní? Špatná odpověď: Cokoliv technického. : Správné odpověď: Aspoň jedna konkrétní uživatelská potřeba.  Jaké uživatelské potřeby projekt naplňuje? Špatná odpověď: Cokoliv mimo jasné uživatelské potřeby získané přímo od uživatelů.</description>
    </item>
    
    <item>
      <title>Dodatek B: Ukázkový plán posuzování kvality</title>
      <link>/dodatek-b.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/dodatek-b.html</guid>
      <description>V duchu rady Chtějte důkazy místo slibů nabízíme ukázkový plán posuzování kvality (QASP), který byste měli zařadit do svých agilních poptávkových dokumentů.
   Oblast Výkonnostní ukazatele Přijatelná úroveň kvality Způsob kontroly     Testování Kód odevzdaný na základě objednávky musí být z větší části pokrytý automatickými testy. Zdrojový kód je verzovaný ve veřejném repository a zůstává ve vlastnictví státu. Aspoň 90% pokrytí testy Kombinace ruční kontroly a automatických testů   Vývojářské standardy GSA 18F Front-End Guide Žádná varování od linteru, žádná varování od překladače Kombinace ruční kontroly a automatických testů   Přístupnost Web Content Accessibility Guidelines 2.</description>
    </item>
    
    <item>
      <title>Rady pro rozpočtování a řízení technických projektů</title>
      <link>/03-rady.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/03-rady.html</guid>
      <description>Změňte svůj pohled na rizika Za posledních pár desítek let státní správa přestala pro vývoj kritických systémů používat vlastní zaměstnance a začala spoléhat na externí dodavatele. Jde o zdánlivě bezpečnější řešení, které je často motivované také omezenými vlastními kapacitami a sliby levnějších „krabicových“ řešení ze strany dodavatele.
Na projektech jako Heathcare.gov jsme se ovšem naučili, že outsourcovat jde pouze práci, nikoliv riziko selhání.1 Neúspěšné projekty jdou na vrub zadavatele, nikoliv dodavatelů.</description>
    </item>
    
    <item>
      <title>Základní principy návrhu moderního softwaru</title>
      <link>/02-zakladni-principy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/02-zakladni-principy.html</guid>
      <description>Technologické projekty mají větší šanci uspět, pokud „netechnické“ profese dohlížející na jejich průběh a rozpočet rozumí šesti základním principům moderního vývoje softwaru, kterými jsou: design zaměřený na uživatele, agilní vývoj softwaru, DevOps, modulární architektura, modulární zakázky a vlastnictví produktu. Jde o obecné principy, jejichž pochopení nevyžaduje technické vzdělání. Ale jakmile je jednou ovládnete, dostanete se skrz vatu a technický žargon na jádro úspěšného řízení softwarových projektů.
Design zaměřený na uživatele Veškerý vývoj softwaru by se měl točit kolem potřeb skutečných koncových uživatelů, konkrétních lidí, kteří budou systém používat.</description>
    </item>
    
    <item>
      <title>Úvod</title>
      <link>/01-uvod.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01-uvod.html</guid>
      <description>Pouze 13 % velkých státních softwarových projektů končí úspěchem.1 Prostředí státní správy je pro vývoj softwaru obzvlášť složité, protože státní správa postrádá základní znalosti moderního vývoje softwaru a spoléhá se na zastaralé způsoby nákupu softwaru.
Státy jsou přitom na moderním softwaru a hardwaru stále víc závislé, nedokázaly by bez nich poskytovat základní veřejné služby a úspěch jakékoliv velké politické změny je podmíněn úspěchem její softwarové infrastruktury. Různé státní úřady čelí podobným výzvám – musí v rámci svých rozpočtových a personálních možností modernizovat zastaralé technologické systémy, které jsou drahé, neflexibilní a neefektivní.</description>
    </item>
    
  </channel>
</rss>